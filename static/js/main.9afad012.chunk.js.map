{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_GOODS_ALPH","SORT_GOODS_LENGTH","GOODS_REVERSE","App","useState","sortFilter","setSortFilter","reversedGoods","setReversedGoods","vissibleGoods","goods","preperedGoods","sort","good1","good2","localeCompare","reverse","getPreparedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAkB,iBAClBC,EAAoB,SACpBC,EAAgB,UA2Bf,IAAMC,EAAM,WACjB,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA0CF,mBAAS,IAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KAEMC,EA7BR,SAA0BC,EAA1B,GAAiE,IAA9BL,EAA6B,EAA7BA,WAAYE,EAAiB,EAAjBA,cACvCI,EAAa,YAAOD,GAqB1B,OAnBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKL,EACH,OAAOa,EAAME,cAAcD,GAE7B,KAAKb,EACH,OAAOY,EAAMR,GAAcS,EAAMT,GAEnC,QACE,OAAO,MAKXE,GACFI,EAAcK,UAGTL,EAOeM,CACpBlB,EACA,CAAEM,aAAYE,kBAGhB,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYf,IAAeL,IAE/BqB,QAAS,kBAAMf,EAAcN,IAP/B,iCAYA,wBACEmB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYf,IAAeJ,IAE/BoB,QAAS,kBAAMf,EAAcL,IAP/B,4BAYA,wBACEkB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYb,IAAkBL,IAElCmB,QAAS,kBAELb,EADgB,KAAlBD,EACmBL,EAEA,KAXvB,sBAkBkB,KAAfG,GAAuC,KAAlBE,IACtB,wBACEY,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPf,EAAc,IACdE,EAAiB,KALrB,sBAcJ,6BACGC,EAAca,KAAI,SAAAC,GAAI,OACrB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YCpHnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9afad012.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_GOODS_ALPH = 'alphabetically';\nconst SORT_GOODS_LENGTH = 'length';\nconst GOODS_REVERSE = 'reverse';\n\nfunction getPreparedGoods(goods, { sortFilter, reversedGoods }) {\n  const preperedGoods = [...goods];\n\n  if (sortFilter) {\n    preperedGoods.sort((good1, good2) => {\n      switch (sortFilter) {\n        case SORT_GOODS_ALPH:\n          return good1.localeCompare(good2);\n\n        case SORT_GOODS_LENGTH:\n          return good1[sortFilter] - good2[sortFilter];\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reversedGoods) {\n    preperedGoods.reverse();\n  }\n\n  return preperedGoods;\n}\n\nexport const App = () => {\n  const [sortFilter, setSortFilter] = useState('');\n  const [reversedGoods, setReversedGoods] = useState('');\n\n  const vissibleGoods = getPreparedGoods(\n    goodsFromServer,\n    { sortFilter, reversedGoods },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': sortFilter !== SORT_GOODS_ALPH },\n          )}\n          onClick={() => setSortFilter(SORT_GOODS_ALPH)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': sortFilter !== SORT_GOODS_LENGTH },\n          )}\n          onClick={() => setSortFilter(SORT_GOODS_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            { 'is-light': reversedGoods !== GOODS_REVERSE },\n          )}\n          onClick={() => (\n            reversedGoods === '' ? (\n              setReversedGoods(GOODS_REVERSE)\n            ) : (\n              setReversedGoods('')\n            )\n          )}\n        >\n          Reverse\n        </button>\n\n        { (sortFilter !== '' || reversedGoods !== '') && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortFilter('');\n              setReversedGoods('');\n            }}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        {vissibleGoods.map(good => (\n          <li key={good} data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}